# vim:ft=yaml.ansible
- name: Create `www` group
  tags: web,base
  become: yes
  group:
    name: www

- name: Create `www` user
  tags: web,base
  become: yes
  user:
    home: /var/www
    create_home: yes
    group: www
    name: www

- name: Install nginx
  tags: web
  become: yes
  package:
    name: nginx
    state: latest

- name: Disable default nginx site
  tags: web
  become: true
  file:
    state: absent
    path: /etc/nginx/sites-enabled/default

- name: Enable nginx service
  tags: web
  become: yes
  service:
    name: nginx
    enabled: yes
    state:  started

- name: Install postgresql
  tags: web,database
  become: yes
  package:
    name: "{{ postgresql_package }}"
    state: latest

- name: initialize database
  tags: web,database
  when: ansible_distribution == "AlmaLinux" or ansible_distribution == "CentOS"
  become: true
  command: postgresql-setup --initdb
  args:
    creates: "/var/lib/pgsql/data"

- name: Enable postgresql
  tags: web,database
  become: yes
  service:
    name: "{{ postgresql_service }}"
    state: started
    enabled: yes

- name: create letsencrypt directory
  tags: web,dns
  become: yes
  command: mkdir -p /var/lib/letsencrypt

- name: Copy GoDaddy API credentials
  tags: web,security,dns
  become: yes
  copy:
    src: godaddy.ini
    dest: /var/lib/letsencrypt/godaddy_credentials.ini
    owner: root
    group: root
    mode: 0600

- name: Create certificate for domain and subdomains
  tags: web,dns
  become: yes
  shell: docker run --rm \
    -v /var/lib/letsencrypt:/var/lib/letsencrypt \
    -v /etc/letsencrypt:/etc/letsencrypt \
    --cap-drop=all \
    miigotu/certbot-dns-godaddy certbot certonly \
      --authenticator dns-godaddy \
      --dns-godaddy-propagation-seconds 60 \
      --dns-godaddy-credentials /var/lib/letsencrypt/godaddy_credentials.ini \
      --keep-until-expiring --non-interactive --expand \
      --server https://acme-v02.api.letsencrypt.org/directory \
      --agree-tos --email "plumpalbert@gmail.com" \
      -d plumpalbert.xyz -d '*.plumpalbert.xyz'

- name: Copy nginx configuration
  tags: web,nginx
  become: yes
  copy:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: 0644

- name: Reload nginx
  tags: web,nginx
  become: true
  service:
    name: nginx
    state: restarted
